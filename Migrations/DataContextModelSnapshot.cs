// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Musique.Data;

#nullable disable

namespace Musique.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("AlbumArtista", b =>
                {
                    b.Property<int>("AlbunsIdAlbum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArtistasIdUsuario")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlbunsIdAlbum", "ArtistasIdUsuario");

                    b.HasIndex("ArtistasIdUsuario");

                    b.ToTable("AlbumArtista");
                });

            modelBuilder.Entity("Musique.Models.Album", b =>
                {
                    b.Property<int>("IdAlbum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdAlbum");

                    b.ToTable("Albuns");
                });

            modelBuilder.Entity("Musique.Models.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Classificacao")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GravacaoIdGravacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOuvinte")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("GravacaoIdGravacao");

                    b.HasIndex("IdOuvinte");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("Musique.Models.Denuncia", b =>
                {
                    b.Property<int>("IdDenuncia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DenuncianteIdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdAvaliacao")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOuvinte")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeradorIdUsuario")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OpcMotivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TextoMotivo")
                        .HasColumnType("TEXT");

                    b.HasKey("IdDenuncia");

                    b.HasIndex("DenuncianteIdUsuario");

                    b.HasIndex("IdAvaliacao");

                    b.HasIndex("ModeradorIdUsuario");

                    b.ToTable("Denuncias");
                });

            modelBuilder.Entity("Musique.Models.Genero", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Musique.Models.Gravacao", b =>
                {
                    b.Property<int>("IdGravacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("TEXT");

                    b.Property<double>("Duracao")
                        .HasColumnType("REAL");

                    b.Property<int>("IdAlbum")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdArtista")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdGenero")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdMusica")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdGravacao");

                    b.HasIndex("IdAlbum");

                    b.HasIndex("IdArtista");

                    b.HasIndex("IdGenero");

                    b.HasIndex("IdMusica");

                    b.ToTable("Gravacoes");
                });

            modelBuilder.Entity("Musique.Models.Musica", b =>
                {
                    b.Property<int>("IdMusica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdMusica");

                    b.ToTable("Musicas");
                });

            modelBuilder.Entity("Musique.Models.Seguidores", b =>
                {
                    b.Property<int>("IdSeguido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdSeguidor")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdSeguido");

                    b.ToTable("TblSeguidores");
                });

            modelBuilder.Entity("Musique.Models.Sugestao", b =>
                {
                    b.Property<int>("IdSugestao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdOuvinte")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeArtista")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeMusica")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("IdSugestao");

                    b.HasIndex("IdOuvinte");

                    b.ToTable("Sugestoes");
                });

            modelBuilder.Entity("Musique.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("Musique.Models.Artista", b =>
                {
                    b.HasBaseType("Musique.Models.Usuario");

                    b.Property<string>("Biografia")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Artista");
                });

            modelBuilder.Entity("Musique.Models.Moderador", b =>
                {
                    b.HasBaseType("Musique.Models.Usuario");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Moderador");
                });

            modelBuilder.Entity("Musique.Models.Ouvinte", b =>
                {
                    b.HasBaseType("Musique.Models.Usuario");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OuvintesSeguidos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seguidores")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Ouvinte");
                });

            modelBuilder.Entity("AlbumArtista", b =>
                {
                    b.HasOne("Musique.Models.Album", null)
                        .WithMany()
                        .HasForeignKey("AlbunsIdAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musique.Models.Artista", null)
                        .WithMany()
                        .HasForeignKey("ArtistasIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Musique.Models.Avaliacao", b =>
                {
                    b.HasOne("Musique.Models.Gravacao", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("GravacaoIdGravacao");

                    b.HasOne("Musique.Models.Ouvinte", "Ouvinte")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("IdOuvinte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ouvinte");
                });

            modelBuilder.Entity("Musique.Models.Denuncia", b =>
                {
                    b.HasOne("Musique.Models.Ouvinte", "Denunciante")
                        .WithMany("Denuncias")
                        .HasForeignKey("DenuncianteIdUsuario");

                    b.HasOne("Musique.Models.Avaliacao", "Avaliacao")
                        .WithMany("Denuncias")
                        .HasForeignKey("IdAvaliacao")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musique.Models.Moderador", null)
                        .WithMany("Denuncias")
                        .HasForeignKey("ModeradorIdUsuario");

                    b.Navigation("Avaliacao");

                    b.Navigation("Denunciante");
                });

            modelBuilder.Entity("Musique.Models.Gravacao", b =>
                {
                    b.HasOne("Musique.Models.Album", "Album")
                        .WithMany("Gravacoes")
                        .HasForeignKey("IdAlbum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musique.Models.Artista", "Artista")
                        .WithMany()
                        .HasForeignKey("IdArtista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musique.Models.Genero", "Genero")
                        .WithMany("Gravacoes")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Musique.Models.Musica", "Musica")
                        .WithMany("Gravacoes")
                        .HasForeignKey("IdMusica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");

                    b.Navigation("Artista");

                    b.Navigation("Genero");

                    b.Navigation("Musica");
                });

            modelBuilder.Entity("Musique.Models.Sugestao", b =>
                {
                    b.HasOne("Musique.Models.Ouvinte", "Ouvinte")
                        .WithMany("Sugestoes")
                        .HasForeignKey("IdOuvinte")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ouvinte");
                });

            modelBuilder.Entity("Musique.Models.Album", b =>
                {
                    b.Navigation("Gravacoes");
                });

            modelBuilder.Entity("Musique.Models.Avaliacao", b =>
                {
                    b.Navigation("Denuncias");
                });

            modelBuilder.Entity("Musique.Models.Genero", b =>
                {
                    b.Navigation("Gravacoes");
                });

            modelBuilder.Entity("Musique.Models.Gravacao", b =>
                {
                    b.Navigation("Avaliacoes");
                });

            modelBuilder.Entity("Musique.Models.Musica", b =>
                {
                    b.Navigation("Gravacoes");
                });

            modelBuilder.Entity("Musique.Models.Moderador", b =>
                {
                    b.Navigation("Denuncias");
                });

            modelBuilder.Entity("Musique.Models.Ouvinte", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Denuncias");

                    b.Navigation("Sugestoes");
                });
#pragma warning restore 612, 618
        }
    }
}
